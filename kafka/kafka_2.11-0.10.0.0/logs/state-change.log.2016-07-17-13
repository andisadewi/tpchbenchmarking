[2016-07-17 13:50:04,738] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-07-17 13:50:13,612] TRACE Controller 0 epoch 2 started leader election for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:13,740] ERROR Controller 0 epoch 2 initiated state change for partition [twitter,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:335)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:166)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:684)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:680)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:680)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.KafkaController.startup(KafkaController.scala:680)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:200)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:37)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2016-07-17 13:50:14,308] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition twitter-0 (state.change.logger)
[2016-07-17 13:50:14,550] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [twitter,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-07-17 13:50:14,552] TRACE Controller 0 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,559] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition twitter-0 in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 0 (state.change.logger)
[2016-07-17 13:50:14,564] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition twitter-0 (state.change.logger)
[2016-07-17 13:50:14,573] TRACE Controller 0 epoch 2 received response {error_code=0} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:50:14,579] TRACE Controller 0 epoch 2 started leader election for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,633] TRACE Controller 0 epoch 2 elected leader 0 for Offline partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,636] TRACE Controller 0 epoch 2 changed partition [twitter,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2016-07-17 13:50:14,636] TRACE Controller 0 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2) to broker 0 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,637] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2) to broker 0 for partition twitter-0 (state.change.logger)
[2016-07-17 13:50:14,827] TRACE Broker 0 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@39a9a556 correlation id 1 from controller 0 epoch 2 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,847] TRACE Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 2 starting the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,871] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 2 with correlation id 1 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,873] TRACE Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 2 for the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,886] TRACE Controller 0 epoch 2 received response {error_code=0,partitions=[{topic=twitter,partition=0,error_code=0}]} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:50:14,887] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition twitter-0 in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 2 (state.change.logger)
[2016-07-17 13:50:14,889] TRACE Controller 0 epoch 2 received response {error_code=0} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:50:14,893] TRACE Broker 0 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@92898b correlation id 3 from controller 0 epoch 2 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,894] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 2 starting the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,895] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 2 for partition [twitter,0] since it is already the leader for the partition. (state.change.logger)
[2016-07-17 13:50:14,896] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 2 for the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:50:14,897] TRACE Controller 0 epoch 2 received response {error_code=0,partitions=[{topic=twitter,partition=0,error_code=0}]} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:50:14,901] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition twitter-0 in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 4 (state.change.logger)
[2016-07-17 13:50:14,902] TRACE Controller 0 epoch 2 received response {error_code=0} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:58:07,237] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-07-17 13:58:20,884] TRACE Controller 0 epoch 3 started leader election for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:20,908] ERROR Controller 0 epoch 3 initiated state change for partition [twitter,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:335)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:166)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:684)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:680)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:680)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.KafkaController.startup(KafkaController.scala:680)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:200)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:37)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2016-07-17 13:58:21,517] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2) to broker 0 for partition twitter-0 (state.change.logger)
[2016-07-17 13:58:21,656] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [twitter,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-07-17 13:58:21,660] TRACE Controller 0 epoch 3 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2) to broker 0 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:21,671] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2) to broker 0 for partition twitter-0 (state.change.logger)
[2016-07-17 13:58:21,672] TRACE Controller 0 epoch 3 started leader election for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:21,674] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition twitter-0 in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 0 (state.change.logger)
[2016-07-17 13:58:21,686] TRACE Controller 0 epoch 3 received response {error_code=0} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:58:21,852] TRACE Controller 0 epoch 3 elected leader 0 for Offline partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:21,872] TRACE Controller 0 epoch 3 changed partition [twitter,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2016-07-17 13:58:21,873] TRACE Controller 0 epoch 3 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) to broker 0 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:21,873] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) to broker 0 for partition twitter-0 (state.change.logger)
[2016-07-17 13:58:21,932] TRACE Broker 0 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@5607164c correlation id 1 from controller 0 epoch 3 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:21,952] TRACE Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 3 starting the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:22,008] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 3 with correlation id 1 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:22,011] TRACE Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 3 for the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:22,043] TRACE Controller 0 epoch 3 received response {error_code=0,partitions=[{topic=twitter,partition=0,error_code=0}]} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:58:22,045] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition twitter-0 in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 2 (state.change.logger)
[2016-07-17 13:58:22,045] TRACE Controller 0 epoch 3 received response {error_code=0} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:58:22,049] TRACE Broker 0 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@75de592d correlation id 3 from controller 0 epoch 3 for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:22,050] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 3 starting the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:22,053] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 3 for partition [twitter,0] since it is already the leader for the partition. (state.change.logger)
[2016-07-17 13:58:22,053] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 3 for the become-leader transition for partition [twitter,0] (state.change.logger)
[2016-07-17 13:58:22,054] TRACE Controller 0 epoch 3 received response {error_code=0,partitions=[{topic=twitter,partition=0,error_code=0}]} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
[2016-07-17 13:58:22,063] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition twitter-0 in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2016-07-17 13:58:22,067] TRACE Controller 0 epoch 3 received response {error_code=0} for a request sent to broker 192.168.1.26:9092 (id: 0 rack: null) (state.change.logger)
